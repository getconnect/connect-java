apply plugin: 'maven'
apply plugin: 'signing'

def isReleaseBuild() {
    return !version.endsWith("SNAPSHOT")
}

def sonatypeRepositoryUrl
if (isReleaseBuild()) {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}

signing {
    required {
        isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives")
    }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
            }

            pom.project {
                name POM_NAME
                packaging 'jar'
                artifactId POM_ARTIFACT_ID
                description POM_DESCRIPTION
                url 'https://getconnect.io'

                organization {
                    name 'Connect'
                    url 'https://getconnect.io'
                }

                scm {
                    connection 'scm:git@github.com:getconnect/connect-java.git'
                    developerConnection 'scm:git@github.com:getconnect/connect-java.git'
                    url 'https://github.com/getconnect/connect-java.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'connect'
                        name 'Connect'
                        email 'hello@getconnect.io'
                    }
                }
            }

            pom.whenConfigured { p ->
                p.dependencies.removeAll {
                    it.artifactId.equals("connect-client-core")
                }
            }
        }
    }
}